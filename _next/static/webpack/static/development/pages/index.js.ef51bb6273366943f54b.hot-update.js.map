{"version":3,"file":"static/webpack/static/development/pages/index.js.ef51bb6273366943f54b.hot-update.js","sources":["webpack:///./components/ResponsiveStackGrid.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from \"react\";\nimport sizeMe from \"react-sizeme\";\nimport StackGrid, { transitions } from \"react-stack-grid\";\n\nconst { fadeUp, fadeDown } = transitions;\n\nconst MonitorSizeStackGrid = sizeMe()(({ size, ref, ...props }: any) => {\n  const { width } = size;\n  const columnWidth = useMemo(() => {\n    if (width < 500) return \"100%\";\n    else if (width < 768) return \"50%\";\n    else return 350;\n  }, [width]);\n  return (\n    <div style={{ padding: \"0 16px\" }}>\n      <StackGrid\n        ref={ref}\n        columnWidth={columnWidth}\n        gutterWidth={16}\n        gutterHeight={16}\n        appear={fadeUp.appear}\n        appeared={fadeUp.appeared}\n        enter={fadeUp.enter}\n        entered={fadeUp.entered}\n        leaved={fadeDown.leaved}\n        monitorImagesLoaded\n        {...props}\n      />\n    </div>\n  );\n});\n\nexport const ResponsiveStackGrid = forwardRef((props, ref) => (\n  <MonitorSizeStackGrid {...props} ref={ref} />\n));\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;A","sourceRoot":""}