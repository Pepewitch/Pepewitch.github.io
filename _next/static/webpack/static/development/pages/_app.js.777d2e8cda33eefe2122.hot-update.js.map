{"version":3,"file":"static/webpack/static/development/pages/_app.js.777d2e8cda33eefe2122.hot-update.js","sources":["webpack:///./pages/_app.tsx"],"sourcesContent":["import App from \"next/app\";\nimport Head from \"next/head\";\nimport React, { Fragment } from \"react\";\nimport { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    height: 100vh;\n    width: 100%;\n    font-family: 'Kanit', sans-serif;\n    margin: 0;\n    background: rgb(255,0,134);\n    background: linear-gradient(45deg, rgba(255,0,134,0.43040966386554624) 0%, rgba(255,212,212,0.4864320728291317) 100%);\n  }\n  #__next {\n    height: 100vh;\n    overflow: auto;\n  }\n`;\n\n// later in your app\nclass MyApp extends App {\n  // Only uncomment this method if you have blocking data requirements for\n  // every single page in your application. This disables the ability to\n  // perform automatic static optimization, causing every page in your app to\n  // be server-side rendered.\n  //\n  // static async getInitialProps(appContext) {\n  //   // calls page's `getInitialProps` and fills `appProps.pageProps`\n  //   const appProps = await App.getInitialProps(appContext);\n  //\n  //   return { ...appProps }\n  // }\n\n  render() {\n    const { Component, pageProps } = this.props;\n\n    return (\n      <Fragment>\n        <Head>\n          <title>Pepewitch</title>\n          <link rel=\"icon\" href=\"/favicon.ico\" />\n          <link\n            href={\"https://fonts.googleapis.com/css?family=Kanit&display=swap\"}\n            rel=\"stylesheet\"\n          />\n        </Head>\n        <GlobalStyle />\n        <Component {...pageProps} />\n      </Fragment>\n    );\n  }\n}\n\nexport default MyApp;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAeA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA9BA;AACA;AAgCA;;;;A","sourceRoot":""}