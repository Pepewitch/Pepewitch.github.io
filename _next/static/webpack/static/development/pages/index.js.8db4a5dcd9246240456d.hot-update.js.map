{"version":3,"file":"static/webpack/static/development/pages/index.js.8db4a5dcd9246240456d.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import {\n  Avatar,\n  Comment,\n  Divider,\n  Form,\n  Icon,\n  Tooltip,\n  Typography\n} from \"antd\";\nimport moment from \"moment\";\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport styled from \"styled-components\";\nimport { Card } from \"../components/Card\";\nimport { CommendBox } from \"../components/CommendBox\";\nimport { CommentList } from \"../components/CommentList\";\nimport { Header } from \"../components/Header\";\nimport { Image } from \"../components/Image\";\nimport { ResponsiveStackGrid } from \"../components/ResponsiveStackGrid\";\nimport firebase from \"../utils/firebase\";\nimport { Showcase, showcases } from \"../utils/showcases\";\n\nconst { Title, Paragraph } = Typography;\n\nconst Container = styled.div`\n  padding-top: 80px;\n  padding-bottom: 32px;\n`;\n\nconst ShowcaseBody = styled.div`\n  padding: 16px;\n`;\n\nconst SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 8px 0;\n`;\n\nconst StyledTitle = styled(Title)`\n  &.ant-typography {\n    color: #ff577d;\n  }\n`;\n\ninterface IShowcaseCardProps {\n  showcase: Showcase;\n  onSizeChange?: () => any;\n}\n\nconst ShowcaseCard = ({ showcase, onSizeChange }: IShowcaseCardProps) => {\n  const { href, src, title, description } = showcase;\n  const [user, initialising, error] = useAuthState(firebase.auth());\n  const [snapshot, loading] = useCollection(\n    firebase.firestore().collection(`showcase/${showcase.key}/comment`)\n  );\n  const comments = useMemo(() => {\n    return snapshot && snapshot.docs.map(doc => doc.data());\n  }, [snapshot]);\n  useEffect(() => {\n    if (onSizeChange) onSizeChange();\n  }, [comments, onSizeChange]);\n  console.log(comments);\n  return (\n    <Card>\n      <a href={href} target=\"_blank\">\n        <Image src={src} title={title} />\n      </a>\n      <ShowcaseBody>\n        <a href={href} target=\"_blank\">\n          <StyledTitle level={4}>{title}</StyledTitle>\n        </a>\n        {description && (\n          <Paragraph type=\"secondary\" ellipsis={{ rows: 4 }}>\n            {description}\n          </Paragraph>\n        )}\n        {loading && (\n          <SpinnerContainer>\n            <Icon\n              type=\"loading\"\n              style={{ fontSize: 32, color: \"#ff577d\" }}\n              spin\n            />\n          </SpinnerContainer>\n        )}\n        {comments && <CommentList comments={comments} user={user} />}\n        <CommendBox\n          user={user}\n          showcase={showcase}\n          onSubmit={e => {\n            if (comments) {\n              firebase\n                .firestore()\n                .collection(`showcase/${showcase.key}/comment`)\n                .add({\n                  createdAt: new Date(),\n                  content: e,\n                  uid: user.uid\n                });\n            }\n          }}\n        />\n      </ShowcaseBody>\n    </Card>\n  );\n};\n\nconst Index = () => {\n  const stackGridRef = useRef(null);\n  const onSizeChange = useCallback(\n    () => stackGridRef && stackGridRef.current.updateLayout(),\n    [stackGridRef]\n  );\n  return (\n    <Container>\n      <Header />\n      <ResponsiveStackGrid gridRef={stackGridRef}>\n        {showcases.map(showcase => (\n          <ShowcaseCard\n            key={showcase.key}\n            showcase={showcase}\n            onSizeChange={onSizeChange}\n          />\n        ))}\n      </ResponsiveStackGrid>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAHA;AAKA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AACA;AACA;;;;A","sourceRoot":""}