{"version":3,"file":"static/webpack/static/development/pages/index.js.3b0897edec24caae1038.hot-update.js","sources":["webpack:///./node_modules/antd/lib/divider/index.js","webpack:///./node_modules/antd/lib/divider/style/index.js","webpack:///./pages/index.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _classnames = _interopRequireDefault(require(\"classnames\"));\n\nvar _configProvider = require(\"../config-provider\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar Divider = function Divider(props) {\n  return React.createElement(_configProvider.ConfigConsumer, null, function (_ref) {\n    var _classNames;\n\n    var getPrefixCls = _ref.getPrefixCls;\n\n    var customizePrefixCls = props.prefixCls,\n        _props$type = props.type,\n        type = _props$type === void 0 ? 'horizontal' : _props$type,\n        _props$orientation = props.orientation,\n        orientation = _props$orientation === void 0 ? 'center' : _props$orientation,\n        className = props.className,\n        children = props.children,\n        dashed = props.dashed,\n        restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n\n    var prefixCls = getPrefixCls('divider', customizePrefixCls);\n    var orientationPrefix = orientation.length > 0 ? \"-\".concat(orientation) : orientation;\n    var classString = (0, _classnames[\"default\"])(className, prefixCls, \"\".concat(prefixCls, \"-\").concat(type), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-with-text\").concat(orientationPrefix), children), _defineProperty(_classNames, \"\".concat(prefixCls, \"-dashed\"), !!dashed), _classNames));\n    return React.createElement(\"div\", _extends({\n      className: classString\n    }, restProps, {\n      role: \"separator\"\n    }), children && React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-inner-text\")\n    }, children));\n  });\n};\n\nvar _default = Divider;\nexports[\"default\"] = _default;\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nrequire(\"../../style/index.less\");\n\nrequire(\"./index.less\");\n//# sourceMappingURL=index.js.map\n","import { Avatar, Comment, Divider, Form, Tooltip, Typography } from \"antd\";\nimport moment from \"moment\";\nimport React, { useCallback, useEffect, useMemo, useRef } from \"react\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useDocument } from \"react-firebase-hooks/firestore\";\nimport styled from \"styled-components\";\nimport { Card } from \"../components/Card\";\nimport { CommendBox } from \"../components/CommendBox\";\nimport { Header } from \"../components/Header\";\nimport { Image } from \"../components/Image\";\nimport { ResponsiveStackGrid } from \"../components/ResponsiveStackGrid\";\nimport firebase from \"../utils/firebase\";\nimport { Showcase, showcases } from \"../utils/showcases\";\n\nconst { Title, Paragraph } = Typography;\n\nconst Container = styled.div`\n  padding-top: 80px;\n  padding-bottom: 32px;\n`;\n\nconst ShowcaseBody = styled.div`\n  padding: 16px;\n`;\n\ninterface IShowcaseCardProps {\n  showcase: Showcase;\n  onSizeChange: () => any;\n}\n\nconst ShowcaseCard = ({ showcase, onSizeChange }: IShowcaseCardProps) => {\n  const { href, src, title, description } = showcase;\n  const [user, initialising, error] = useAuthState(firebase.auth());\n  const [snapshot, loading] = useDocument(\n    firebase.firestore().doc(`showcase/${showcase.key}`)\n  );\n  const comments = useMemo(() => {\n    if (snapshot) return snapshot.data().comments;\n    return undefined;\n  }, [snapshot]);\n  useEffect(() => {\n    onSizeChange();\n  }, [snapshot, onSizeChange]);\n  return (\n    <Card>\n      <a href={href} target=\"_blank\">\n        <Image src={src} title={title} />\n      </a>\n      <ShowcaseBody>\n        <a href={href} target=\"_blank\">\n          <Title level={4}>{title}</Title>\n        </a>\n        {description && (\n          <Paragraph type=\"secondary\" ellipsis={{ rows: 4 }}>\n            {description}\n          </Paragraph>\n        )}\n        <Divider />\n        {comments &&\n          comments.map(comment => (\n            <Comment\n              // actions={actions}\n              author={user ? user.displayName : \"Someone\"}\n              avatar={\n                <Avatar\n                  size=\"small\"\n                  icon={!user || comment.uid !== user.uid ? \"user\" : undefined}\n                  src={\n                    user && comment.uid === user.uid ? user.photoURL : undefined\n                  }\n                />\n              }\n              content={<p>{comment.content}</p>}\n              datetime={\n                <Tooltip\n                  title={moment(comment.createdAt.toDate()).format(\n                    \"YYYY-MM-DD HH:mm:ss\"\n                  )}\n                >\n                  <span>{moment(comment.createdAt.toDate()).fromNow()}</span>\n                </Tooltip>\n              }\n            />\n          ))}\n        <CommendBox\n          user={user}\n          showcase={showcase}\n          onSubmit={e => {\n            if (comments) {\n              firebase\n                .firestore()\n                .doc(`showcase/${showcase.key}`)\n                .update({\n                  comments: [\n                    ...comments,\n                    { createdAt: new Date(), content: e, uid: user.uid }\n                  ]\n                });\n            }\n          }}\n        />\n      </ShowcaseBody>\n    </Card>\n  );\n};\n\nconst Index = () => {\n  const stackGridRef = useRef(null);\n  const onSizeChange = useCallback(\n    () => stackGridRef && console.log(stackGridRef.current),\n    [stackGridRef]\n  );\n  return (\n    <Container>\n      <Header />\n      <ResponsiveStackGrid ref={stackGridRef}>\n        {showcases.map((showcase, index) => (\n          <ShowcaseCard\n            key={showcase.key}\n            showcase={showcase}\n            onSizeChange={onSizeChange}\n          />\n        ))}\n      </ResponsiveStackGrid>\n    </Container>\n  );\n};\n\nexport default Index;\n"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AA0BA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAAA;AAAA;AAHA;AAMA;AACA;AAfA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAUA;AACA;AACA;;;;A","sourceRoot":""}