{"version":3,"file":"static/webpack/static/development/pages/index.js.ab2ed295336b364bdd89.hot-update.js","sources":["webpack:///./components/TestChain.tsx"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport {\n  useSpring,\n  config,\n  useTransition,\n  useChain,\n  animated\n} from \"react-spring\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html,\n  body,\n  #__next {\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    user-select: none;\n    background: lightblue;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst Container = styled(animated.div)`\n  position: relative;\n  display: grid;\n  grid-template-columns: repeat(4, minmax(100px, 1fr));\n  grid-gap: 25px;\n  padding: 25px;\n  background: white;\n  border-radius: 5px;\n  cursor: pointer;\n  box-shadow: 0px 10px 10px -5px rgba(0, 0, 0, 0.05);\n  will-change: width, height, border-radius;\n`;\n\nconst Item = styled(animated.div)`\n  width: 100%;\n  height: 100%;\n  background: white;\n  border-radius: 5px;\n  will-change: transform, opacity;\n`;\n\nconst data = [\n  {\n    name: \"Rare Wind\",\n    description: \"#a8edea → #fed6e3\",\n    css: \"linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)\",\n    height: 200\n  },\n  {\n    name: \"Saint Petersburg\",\n    description: \"#f5f7fa → #c3cfe2\",\n    css: \"linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)\",\n    height: 400\n  },\n  {\n    name: \"Deep Blue\",\n    description: \"#e0c3fc → #8ec5fc\",\n    css: \"linear-gradient(135deg, #e0c3fc 0%, #8ec5fc 100%)\",\n    height: 400\n  },\n  {\n    name: \"Ripe Malinka\",\n    description: \"#f093fb → #f5576c\",\n    css: \"linear-gradient(135deg, #f093fb 0%, #f5576c 100%)\",\n    height: 400\n  },\n  {\n    name: \"Perfect White\",\n    description: \"#fdfbfb → #ebedee\",\n    css: \"linear-gradient(135deg, #E3FDF5 0%, #FFE6FA 100%)\",\n    height: 400\n  },\n  {\n    name: \"Near Moon\",\n    description: \"#5ee7df → #b490ca\",\n    css: \"linear-gradient(135deg, #5ee7df 0%, #b490ca 100%)\",\n    height: 400\n  },\n  {\n    name: \"Wild Apple\",\n    description: \"#d299c2 → #fef9d7\",\n    css: \"linear-gradient(135deg, #d299c2 0%, #fef9d7 100%)\",\n    height: 200\n  },\n  {\n    name: \"Ladoga Bottom\",\n    description: \"#ebc0fd → #d9ded8\",\n    css: \"linear-gradient(135deg, #ebc0fd 0%, #d9ded8 100%)\",\n    height: 400\n  },\n  {\n    name: \"Sunny Morning\",\n    description: \"#f6d365 → #fda085\",\n    css: \"linear-gradient(135deg, #f6d365 0%, #fda085 100%)\",\n    height: 200\n  },\n  {\n    name: \"Lemon Gate\",\n    description: \"#96fbc4 → #f9f586\",\n    css: \"linear-gradient(135deg, #96fbc4 0%, #f9f586 100%)\",\n    height: 400\n  },\n  {\n    name: \"Salt Mountain\",\n    description: \" #FFFEFF → #D7FFFE\",\n    css: \"linear-gradient(135deg, #FFFEFF 0%, #D7FFFE 100%)\",\n    height: 200\n  },\n  {\n    name: \"New York\",\n    description: \" #fff1eb → #ace0f9\",\n    css: \"linear-gradient(135deg, #fff1eb 0%, #ace0f9 100%)\",\n    height: 400\n  },\n  {\n    name: \"Soft Grass\",\n    description: \" #c1dfc4 → #deecdd\",\n    css: \"linear-gradient(135deg, #c1dfc4 0%, #deecdd 100%)\",\n    height: 400\n  },\n  {\n    name: \"Japan Blush\",\n    description: \" #ddd6f3 → #faaca8\",\n    css: \"linear-gradient(135deg, #ddd6f3 0%, #faaca8 100%, #faaca8 100%)\",\n    height: 200\n  }\n];\n\nexport const TestChain = () => {\n  const [open, set] = useState(false);\n\n  const springRef = useRef();\n  const { size, ...rest } = useSpring<{ size: string }>({\n    ref: springRef,\n    config: config.stiff,\n    from: { size: \"20%\", background: \"hotpink\" },\n    to: { size: open ? \"100%\" : \"20%\", background: open ? \"white\" : \"hotpink\" }\n  } as any);\n\n  const transRef = useRef();\n  const transitions = useTransition(open ? data : [], item => item.name, {\n    ref: transRef,\n    unique: true,\n    trail: 400 / data.length,\n    from: { opacity: 0, transform: \"scale(0)\" },\n    enter: { opacity: 1, transform: \"scale(1)\" },\n    leave: { opacity: 0, transform: \"scale(0)\" }\n  });\n\n  // This will orchestrate the two animations above, comment the last arg and it creates a sequence\n  useChain(open ? [springRef, transRef] : [transRef, springRef], [\n    0,\n    open ? 0.1 : 0.6\n  ]);\n\n  return (\n    <>\n      <Global />\n      <Container\n        style={{\n          ...rest,\n          width: size,\n          height: size\n        }}\n        onClick={() => set(open => !open)}\n      >\n        {transitions.map(({ item, key, props }) => (\n          <Item key={key} style={{ ...props, background: item.css }} />\n        ))}\n      </Container>\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAOA;AAEA;AAqBA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAQA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAJA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAJA;AAJA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AACA;AASA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAMA;;;;A","sourceRoot":""}